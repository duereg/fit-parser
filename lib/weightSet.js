// Generated by CoffeeScript 1.8.0
(function() {
  var Interval, Set, Weight, WeightSet, actions,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Weight = require('./weight');

  Interval = require('./interval');

  Set = require('./set');

  actions = require('./actions');

  WeightSet = (function(_super) {
    __extends(WeightSet, _super);

    function WeightSet(options) {
      _super.call(this, options);
      this.intervals = this.intervals.map(function(interval) {
        if (interval.reps) {
          return new Weight(interval);
        } else {
          return new Interval(interval);
        }
      });
    }

    WeightSet.prototype.add = function(weightToAdd) {
      if (weightToAdd === null) {
        throw new Error('Invalid weight given');
      }
      weightToAdd = new Weight(weightToAdd);
      this.intervals.push(weightToAdd);
      return weightToAdd;
    };

    WeightSet.prototype.setWeight = function(weight) {
      return this.current().weight = weight;
    };

    WeightSet.prototype.setReps = function(reps) {
      return this.current().reps = reps;
    };

    WeightSet.prototype.totalReps = function() {
      return actions.sum(this.intervals, 'reps');
    };

    WeightSet.prototype.totalWeight = function() {
      return actions.sum(this.intervals, 'weight');
    };

    return WeightSet;

  })(Set);

  module.exports = WeightSet;

}).call(this);
